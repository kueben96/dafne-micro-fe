stages:
  - dockerize

variables:
  SERVICE_NAME: "frontend-prod"
  # IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_PATH:latest
  # BUILDERNAME: $SERVICE_NAME-builder
  # CONTEXTNAME: $SERVICE_NAME-context


# create_image:
#   stage: dockerize
#   image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:24.0.3
#   only:
#     - main
#   services:
#     - docker:24.0.3-dind
#   tags:
#     - dind
#     - docker
#   script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#     - docker context create $CONTEXTNAME
#     - docker buildx create --use $CONTEXTNAME --name $BUILDERNAME
#     - docker buildx build --builder $BUILDERNAME --provenance false --platform linux/amd64,linux/arm64/v8 --tag $IMAGE_NAME --push .
#   after_script:
#     - docker buildx rm $BUILDERNAME


# APP_NAME: "auth"
# IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_PATH/$APP_NAME:latest
# BUILDERNAME: $SERVICE_NAME-$APP_NAME-builder
# CONTEXTNAME: $SERVICE_NAME-$APP_NAME0-context

create_auth_image:
  stage: dockerize
  variables:
    APP_NAME: "auth"
    IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_PATH/$APP_NAME:latest
    BUILDERNAME: $SERVICE_NAME-$APP_NAME-builder
    CONTEXTNAME: $SERVICE_NAME-$APP_NAME0-context
  extends: .create_image



create_image:
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:24.0.3
  only:
    - main
  services:
    - docker:24.0.3-dind
  tags:
    - dind
    - docker
  script:
    - cd $APP_NAME
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker context create $CONTEXTNAME
    - docker buildx create --use $CONTEXTNAME --name $BUILDERNAME
    - docker buildx build --builder $BUILDERNAME --provenance false --platform linux/amd64,linux/arm64/v8 --tag $IMAGE_NAME --push .
  after_script:
    - docker buildx rm $BUILDERNAME