name: deploy-container

on:
  push:
    branches:
      - main
    # paths:
    #     - 'container/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - run: docker-compose up -d
      - run: |
          # Wait for the Docker Compose services to be up
          while ! docker-compose ps | grep -q "Up"; do
            echo "Services are not up yet. Waiting..."
            sleep 10s
          done
      - run: npm install
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          project: ./cypress/e2e 
          browser: chrome
          headless: true
          record: true
          start: npm run start
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
  build: 
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: container
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies and build container app
        run: |
          npm install
          npm run build
        env:
         PRODUCTION_DOMAIN: ${{ secrets.PRODUCTION_DOMAIN }}
      - uses: shinyinc/action-aws-cli@v1.2
      - run: aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET_NAME }}/container/latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
      - run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/container/latest/index.html"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'eu-west-1'